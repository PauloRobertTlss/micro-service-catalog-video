<?php

namespace Tests\Unit\Models;

use App\Models\Category;
use App\Models\Traits\UuidTrait;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class CategoryTest extends TestCase
{

    private $category;
//    use DatabaseMigrations;
    protected function setUp(): void
    {
        parent::setUp();
        $this->category = new Category();
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->category = null;
    }


    public function testFillableAttributes()
    {
        $fillable = ['name','description','is_active'];
        $this->assertEquals($fillable, $this->category->getFillable());
    }

    public function testDates()
    {
        $dates = ['deleted_at','created_at','updated_at'];
        $modelDates = $this->category->getDates();
        foreach ($dates as $date) {
            $this->assertContains($date, $modelDates);
        }

        $this->assertCount(count($dates), $modelDates);
    }


    public function testIfUseTraits()
    {
        $traits = [SoftDeletes::class, UuidTrait::class];
        $useTrait = array_keys(class_uses(Category::class));
        $this->assertEquals($traits, $useTrait);
    }

    public function testCast()
    {
        $cast = ['id' => 'string','is_active' => 'bool'];
        $this->assertEquals($cast, $this->category->getCasts());
    }

    public function testIncremeting()
    {
        $this->assertFalse($this->category->incrementing);
    }
}
